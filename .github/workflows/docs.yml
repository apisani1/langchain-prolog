name: Documentation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install SWI-Prolog
        run: |
          # Add PPA for latest SWI-Prolog
          sudo apt-add-repository ppa:swi-prolog/stable
          sudo apt-get update
          # Install SWI-Prolog
          sudo apt-get install -y swi-prolog
          # Verify version
          swipl --version
          # Show library paths
          swipl -g "current_prolog_flag(unix_argv, X), writeln(X)" -g halt

      - name: Set up SWI-Prolog environment
        run: |
          # Get SWI-Prolog lib path
          SWIPL_LIB_PATH=$(swipl -g "current_prolog_flag(home, Home), writeln(Home)" -g halt)
          echo "SWIPL_LIB_PATH=$SWIPL_LIB_PATH" >> $GITHUB_ENV
          # Set environment variables
          echo "LD_LIBRARY_PATH=$SWIPL_LIB_PATH/lib/x86_64-linux:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "SWI_HOME_DIR=$SWIPL_LIB_PATH" >> $GITHUB_ENV
          echo "SWIPL_PACK_PATH=$HOME/.local/share/swi-prolog/pack" >> $GITHUB_ENV

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry --version

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Install Dependencies
        run: |
          # Update pip first
          poetry run pip install --upgrade pip
          # Install janus-swi separately first
          poetry run pip install janus-swi==1.5.2
          # Then install the rest
          poetry install --with docs --verbose

      - name: Debug Environment
        run: |
          poetry env info
          poetry show
          poetry check
          poetry run pip list
          poetry run sphinx-build --version
          which swipl
          swipl --version

      - name: Build Documentation
        run: |
          cd docs
          poetry run make SPHINXOPTS="-v" html
        env:
          PYTHONPATH: ${{ github.workspace }}/src
          SPHINX_DEBUG: 1

      - name: Check Build Output
        if: always()
        run: |
          echo "Checking docs build directory..."
          cd docs/_build/html
          ls -la
          if [ -f "index.html" ]; then
            echo "Documentation built successfully"
          else
            echo "Documentation build failed - no index.html"
            exit 1
          fi

      - name: Run doc8
        if: always()
        run: |
          cd docs
          poetry run doc8 .

      - name: Upload Documentation Artifacts
        if: always()
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: documentation
          path: docs/_build/html/
          compression-level: 0  # New option in v4

      - name: Trigger RTD build
        if: success()
        uses: dfm/rtds-action@v1
        with:
          webhook_url: ${{ secrets.RTDS_WEBHOOK_URL }}
          webhook_token: ${{ secrets.RTDS_WEBHOOK_TOKEN }}
          commit_ref: ${{ github.ref }}
